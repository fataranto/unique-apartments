<p></p>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Unique Apartments </a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent"
      aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarContent">
      <!--             <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" href="#">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
            </ul> -->
      <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link <% if (user){%> d-none <% } %>" data-bs-toggle="modal" data-bs-target="#exampleModal"
            href="#">Sign Up</a>
        </li>
        <li class="nav-item">
          <a class="nav-link <% if (user){%> d-none <% } %>" data-bs-toggle="modal" data-bs-target="#exampleModal1"
            href="#">Login</a>
        </li>
        <li class="nav-item dropdown <% if (!user){%> d-none <% } %>">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown"
            aria-expanded="false">
            <% if (user){%> <%= user.username %> <% } %>
          </a>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">


            <li><a class="dropdown-item" href="/admin/user/<%= user.username %>">Dashboard</a></li>

            <li><a class="dropdown-item" href="/apartment/new-apartment">Add an Apartment</a></li>
            <li><a class="dropdown-item" href="/api/auth/signout">Logout</a></li>
          </ul>
        </li>
      </ul>
    </div>
  </div>
</nav>




<!-- Registration form -->
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Registration form</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">

        <div class="container">
          <div class="row justify-content-center">

            <form id="SignupForm" class="bg-white  rounded-5 shadow-5-strong p-2"
              onsubmit="return setSignupAction(this, event)">

              <!-- User input -->
              <div class="form-outline mb-4">
             

                <input type="text" class="form-control" name="username" minlength="4" maxlength="8" pattern="^[a-zA-Z]\w{3,7}" title="Username should start with a letter and can only contain regular characters, digits and '_'" required/>
                <label class="form-label">Username</label>
              </div>



              <!-- Name input -->
              <div class="form-outline mb-4">

                <input type="text" class="form-control" name="name" minlength="2" maxlength="30" pattern="^[a-zA-Z·]{2,30}" title="Use only letters and spaces" required/>
                <label class="form-label" for="form1Example1">Name</label>
              </div>

              <!-- Lastname input -->
              <div class="form-outline mb-4">

                <input type="text" class="form-control" name="lastname" minlength="2" maxlength="30" pattern="^[a-zA-Z·]{4,30}" title="Use only letters and spaces" required/>
                <label class="form-label" for="form1Example1">Last name</label>
              </div>

              <!-- Email input -->
              <div class="form-outline mb-4">

                <input type="email" class="form-control" name="email" required/>
                <label class="form-label" for="form1Example1">Email</label>
              </div>

              <!-- Password input -->
              <div class="form-outline mb-4">
                <input type="password" class="form-control" name="password" aria-label="Password" minlength="4" maxlength="12" pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,12}$" title="Password should have between 4 and 12 characters and contain at least one lowercase, one uppercase and a digit" required />
                <label class="form-label" for="form1Example2">Password</label>
              </div>

              <div class="form-check">
                <input class="form-check-input" type="checkbox" value="user" name="roles" checked
                  style="display:none" />
                <input class="form-check-input" type="checkbox" value="host" name="roles" />
                <label class="form-check-label" for="form1Example3">
                  Make me host
                </label>
              </div>

              <div id="SignupAlert" class="alert alert-danger d-none" role="alert"></div>
              <!-- Submit button -->
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Sign up</button>
              </div>

            </form>

          </div>

        </div>


      </div>

    </div>
  </div>
</div>

<!-- Sign in form -->
<!-- Modal -->
<div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Welcome back!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">

        <!-- Login form -->

        <div class="container">
          <div class="row justify-content-center">
            <form id="loginForm" class="bg-white  rounded-5 shadow-5-strong p-2"
              onsubmit="return setAction(this, event)">
              <!-- User input -->
              <div class="form-outline mb-4">

                <input type="text" class="form-control" name="username" />
                <label class="form-label">Username</label>
              </div>

              <!-- Password input -->
              <div class="form-outline mb-4">
                <input type="password" class="form-control" name="password" aria-label="Password" required />

                <label class="form-label">Password</label>
              </div>

              <!-- 2 column grid layout for inline styling -->
              <div class="row mb-4">
                <div class="col d-flex justify-content-center">
                  <!-- Checkbox -->
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="true" name="rememberMe" checked />
                    <label class="form-check-label">
                      Remember me
                    </label>
                  </div>
                </div>

                <div class="col text-center">
                  <!-- Simple link -->
                  <a href="#!">Forgot password?</a>
                </div>
              </div>

              <div id="loginAlert" class="alert alert-danger d-none" role="alert"></div>

              <!-- Submit button -->
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Sign in</button>
              </div>

            </form>
          </div>
        </div>


      </div>

    </div>
  </div>
</div>

<script>
  async function setSignupAction(form, event) {
    event.preventDefault();
    try {
      const display = document.querySelector('#SignupAlert');
      display.innerHTML = '';
      const username = form.querySelector('input[name="username"]').value;
      const name = form.querySelector('input[name="name"]').value;
      const lastname = form.querySelector('input[name="lastname"]').value;
      const email = form.querySelector('input[name="email"]').value;
      const password = form.querySelector('input[name="password"]').value;
      const roles = form.querySelectorAll('input[name="roles"]');

      const rolesArray = [];
      for (const role of roles) {
        if (role.checked) {
          rolesArray.push(role.value);
        }
      }


      const data = {
        username: username,
        name: name,
        lastname: lastname,
        email: email,
        password: password,
        roles: rolesArray
      };



      const url = '/api/auth/signup';
      const method = 'POST';
      const headers = {
        'Content-Type': 'application/json'
      };
      const body = JSON.stringify(data);
      const options = {
        method: method,
        headers: headers,
        body: body
      };
      const res = await fetch(url, options);

      const json = await res.json();
      console.log(json);

      if (res.status === 400 || res.status === 401 || res.status === 404 || res.status === 500) {

        display.classList.remove('d-none');
        display.innerHTML = json.message;
        return;
      }

      location.assign('/'); 

    } catch (e) {
      console.log(e.message);
    }
  }


  async function setAction(form, event) {
    event.preventDefault();
    try {
      const display = document.querySelector('#loginAlert');
      display.innerHTML = '';
      const username = form.querySelector('input[name="username"]').value;
      const password = form.querySelector('input[name="password"]').value;
      const rememberMe = form.querySelector('input[name="rememberMe"]').checked;

      const data = {
        username: username,
        password: password,
        rememberMe: rememberMe
      };

      const url = '/api/auth/signin';
      const method = 'POST';
      const headers = {
        'Content-Type': 'application/json'
      };
      const body = JSON.stringify(data);
      const options = {
        method: method,
        headers: headers,
        body: body
      };
      const res = await fetch(url, options);

      const json = await res.json();
      console.log(json);

      if (res.status === 400 || res.status === 401 || res.status === 404 || res.status === 500) {

        display.classList.remove('d-none');
        display.innerHTML = json.message;
        return;
      }

      location.assign('/');

    } catch (e) {
      console.log(e.message);
    }
  }
</script>